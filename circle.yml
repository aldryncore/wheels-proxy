machine:
  pre:
    # Install docker
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
    - mkdir -p ~/bin
    # Install docker-compose
    - curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > ~/bin/docker-compose
    - chmod +x ~/bin/docker-compose
    - docker-compose --version
    # Install python 3.5.1 (fast version)
    - wget https://s3.amazonaws.com/circle-downloads/circle-pyenv-python-3.5.1_1.0_amd64.deb
    - sudo dpkg -i circle-pyenv-python-3.5.1_1.0_amd64.deb
  python:
    version: 3.5.1
  services:
    - docker
    - redis
    - postgresql
  environment:
    GIT_EMAIL: circleci@aldryn.com
    GIT_USERNAME: "Circle CI Bot"
    DOCKER_EMAIL: aldryn@divio.ch
    DOCKER_USERNAME: aldrynserver
    IMAGE_NAME: divio/ac-wheelsproxy
    VERSION: 2.$CIRCLE_BUILD_NUM
    DATABASES_DEFAULT: postgres://postgres@localhost/circleci
    CELERY_BROKER_URL: redis://127.0.0.1:6379/1
    CELERY_RESULT_BACKEND: redis://127.0.0.1:6379/2
    BUILDS_DOCKER_DSN: ''  # TODO
    BUILDS_STORAGE_DSN: file:///data


dependencies:
  override:
    - echo $VERSION >VERSION
    - git rev-parse HEAD >COMMIT
    - docker login -e "$DOCKER_EMAIL" -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"


test:
  override:
    - pip install tox
    - tox


deployment:
  production:
    branch: master
    commands:
      - docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$VERSION .
      - git config user.email "$GIT_EMAIL" && git config user.name "$GIT_USERNAME"
      - git tag -m "Release version $VERSION" -m "$CIRCLE_COMPARE_URL" -m "$CIRCLE_BUILD_URL" $VERSION
      - git push origin $VERSION
      - docker push $IMAGE_NAME:$VERSION
      - docker push $IMAGE_NAME:latest
